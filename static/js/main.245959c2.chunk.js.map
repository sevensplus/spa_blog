{"version":3,"sources":["index.js"],"names":["request","XMLHttpRequest","open","send","data","JSON","parse","responseText","NavBar","jump2random","jumps","props","jump2Home","where","this","page","className","onClick","Component","ListItem","click","index","jump2single","value","Content","a","jump","randonSentence","viewer","location","archive","titleList","Object","values","map","item","title","uniqueID","id","key","body","sentence","content","author","Page","b","setState","state","ReactDOM","render","document","querySelector"],"mappings":"yOAMIA,G,MAAU,IAAIC,gBAClBD,EAAQE,KAAK,MAFD,8CAEW,GACvBF,EAAQG,OACR,IAAMC,EAAOC,KAAKC,MAAMN,EAAQO,cAG1BC,E,2MACFC,YAAc,YAEVC,EADgB,EAAKC,MAAdD,OACD,SAAS,I,EAEnBE,UAAY,YAERF,EADgB,EAAKC,MAAdD,OACD,QAAQ,I,wEAER,IAEAG,EAAiB,SADRC,KAAKH,MAAbI,KAEP,OACI,yBAAKC,UAAU,UACX,0BAAMA,UAAU,WAAhB,QACA,0BAAMC,QAASH,KAAKF,UAAWI,UAAWH,EAAQ,eAAe,WAAjE,QACA,0BAAMI,QAASH,KAAKL,YAAaO,UAAWH,EAAQ,WAAa,iBAAjE,c,GAhBKK,aAuBfC,E,2MACFC,MAAQ,WAAO,IAAD,EACmB,EAAKT,MAA3BU,EADG,EACHA,OACPC,EAFU,EACIA,aACFD,I,wEAIZ,OACI,yBAAKJ,QAASH,KAAKM,MAAOJ,UAAU,aAAaF,KAAKH,MAAMY,W,GARjDL,aAYjBM,E,2MACFF,YAAc,SAACG,IAEXC,EADe,EAAKf,MAAbe,MACF,SAAUD,I,EAGnBE,eAAiB,WACb,IACI3B,EAAU,IAAIC,eAIlB,OAHAD,EAAQE,KAAK,MAFD,iCAEa,GACzBF,EAAQG,OACGE,KAAKC,MAAMN,EAAQO,e,wEAIzB,IAAD,SACgCO,KAAKH,MAAlCiB,EADH,EACGA,OAAQC,EADX,EACWA,SAAUC,EADrB,EACqBA,QACzB,GAAe,SAAXF,EAAkB,CAClB,IAAMG,EAAYC,OAAOC,OAAOH,GAASI,KAAI,SAAAC,GAAI,OAAEA,EAAKC,SAClDC,EAAWL,OAAOC,OAAOH,GAASI,KAAI,SAAAC,GAAI,OAAEA,EAAKG,MACvD,OACI,yBAAKtB,UAAU,YACX,yBAAKA,UAAU,SAAf,YACA,yBAAKA,UAAU,iBAAiBe,EAAUG,KAAI,SAACC,EAAKd,GAAN,OAC1C,kBAACF,EAAD,CAAUE,MAAOA,EAAOkB,IAAKF,EAAShB,GAAQE,MAAOY,EAAMb,YAAa,EAAKA,mBAItF,GAAe,WAAXM,EACP,OACI,yBAAKZ,UAAU,cACX,wBAAIA,UAAU,mBAAmBc,EAAQD,GAAUO,OACnD,yBAAKpB,UAAU,eAAec,EAAQD,GAAUW,OAGrD,GAAe,UAAXZ,EAAmB,CAC1B,IAAIxB,EAAOU,KAAKa,iBACZc,EAAWrC,EAAKsC,QAChBC,EAASvC,EAAKuC,OAClB,OACI,yBAAK3B,UAAU,SACX,yBAAKA,UAAU,kBAAkByB,GACjC,yBAAKzB,UAAU,kBAAf,MAAoC2B,S,GA1ClCzB,aAgDhB0B,E,YACF,aAAc,IAAD,8BACT,+CAOJlB,KAAO,SAACD,EAAGoB,GACP,EAAKC,UAAS,SAAAC,GACV,MAAO,CACHnB,OAAOH,EACPI,SAASgB,EACTf,QAAQiB,EAAMjB,aAXtB,EAAKiB,MAAQ,CACTjB,QAAQ1B,EACRwB,OAAO,OACPC,UAAU,GALL,E,sEAkBT,OACI,6BACA,kBAACrB,EAAD,CAAQE,MAAOI,KAAKY,KAAMX,KAAMD,KAAKiC,MAAMnB,SAC3C,yBAAKZ,UAAU,WACX,kBAACQ,EAAD,CAASI,OAAQd,KAAKiC,MAAMnB,OAAQE,QAAShB,KAAKiC,MAAMjB,QAChDJ,KAAMZ,KAAKY,KAAMG,SAAUf,KAAKiC,MAAMlB,iB,GAxB3CX,aA8BnB8B,IAASC,OAAO,kBAACL,EAAD,MAAQM,SAASC,cAAc,W","file":"static/js/main.245959c2.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\n// 抓資料\nconst url = 'https://jsonplaceholder.typicode.com/posts'\nlet request = new XMLHttpRequest();\nrequest.open('GET',url,false)\nrequest.send()\nconst data = JSON.parse(request.responseText)\n\n// 頂欄列\nclass NavBar extends Component {\n    jump2random = () => {\n        const {jumps} = this.props\n        jumps('about',-1)\n    }\n    jump2Home = () => {\n        const {jumps} = this.props\n        jumps('home',-1)\n    }\n    render() {\n        const {page} = this.props\n        const where = page === 'home'\n        return(\n            <div className='navBar'>\n                <span className='navBlog'>Blog</span>\n                <span onClick={this.jump2Home} className={where ? 'navHome here':'navHome'}>Home</span>\n                <span onClick={this.jump2random} className={where ? 'navAbout' : 'navAbout here'}>About</span>\n            </div>\n        )\n    }\n}\n\n// 蓋頁面\nclass ListItem extends Component {\n    click = () => {\n        const {index, jump2single} = this.props\n        jump2single(index)\n\n    }\n    render() {\n        return(\n            <div onClick={this.click} className='postTitle'>{this.props.value}</div>\n        )\n    }\n}\nclass Content extends Component {\n    jump2single = (a) => {\n        const {jump} = this.props\n        jump('single', a)\n    }\n    \n    randonSentence = () => {\n        const url = 'http://api.quotable.io/random'\n        let request = new XMLHttpRequest();\n        request.open('GET', url, false)\n        request.send()\n        let data = JSON.parse(request.responseText)\n        return data\n    }\n    \n    render(){\n        const {viewer, location, archive} = this.props\n        if (viewer === 'home'){\n            const titleList = Object.values(archive).map(item=>item.title)\n            const uniqueID = Object.values(archive).map(item=>item.id)\n            return(\n                <div className='homePage'>\n                    <div className='title'>BlogPost</div>\n                    <div className='postTitleList'>{titleList.map((item,index) => (\n                        <ListItem index={index} key={uniqueID[index]} value={item} jump2single={this.jump2single}/>\n                    ))}</div>\n                </div>\n            )\n        } else if (viewer === 'single') {\n            return (\n                <div className='singlePost'>\n                    <h2 className='singlePostTitle'>{archive[location].title}</h2>\n                    <div className='postContent'>{archive[location].body}</div>\n                </div>\n            )\n        } else if (viewer === 'about'){\n            let data = this.randonSentence()\n            let sentence = data.content\n            let author = data.author\n            return(\n                <div className='quote'>\n                    <div className='randomSentence'>{sentence}</div>\n                    <div className='sentenceAuthor'>by {author}</div>\n                </div>\n            )\n        }\n    }\n}\nclass Page extends Component {\n    constructor(){\n        super()\n        this.state = {\n            archive:data,\n            viewer:'home',\n            location:-1\n        }\n    }\n    jump = (a, b) => {\n        this.setState(state => {\n            return {\n                viewer:a,\n                location:b,\n                archive:state.archive\n            }\n        })\n    }\n    render(){\n        return (\n            <div>\n            <NavBar jumps={this.jump} page={this.state.viewer}/>\n            <div className='content'>\n                <Content viewer={this.state.viewer} archive={this.state.archive}\n                        jump={this.jump} location={this.state.location}/>\n            </div>\n            </div>\n        )\n    }\n}\nReactDOM.render(<Page/>,document.querySelector('main'))"],"sourceRoot":""}